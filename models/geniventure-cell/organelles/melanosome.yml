---
name: melanosome
image: assets/melanosome.svg
selector: "#melanosome"
spawn:
  'on':
    selector: "#golgi_x5F_apparatus path"
    at: random
  every: 90
rules:
  initialization:
  - set:
      size: 0.1
      speed: 1
    switch_state: growing
  growing:
  - if:
      fact: world.working_tyr1
    then:
    - grow:
        by: 0.005
        until: 1
        finally:
          switch_state: seeking_microtuble
    - if:
        fact: size
        between: [0.5, 0.7]
      then:
        set_attr:
          selector: "#Layer1_0_FILL"
          set:
            fill: url(#_Radial2)
    - if:
        fact: size
        between: [0.7, 0.9]
      then:
        set_attr:
          selector: "#Layer1_0_FILL"
          set:
            fill: url(#_Radial3)
    - if:
        fact: size
        greaterThan: 0.9
      then:
        set_attr:
          selector: "#Layer1_0_FILL"
          set:
            fill: url(#_Radial4)
    else:
      grow:
        by: 0.005
        until: 0.6
        finally:
          set_attr:
            selector: "#Layer1_0_FILL"
            set:
              fill: url(#_Radial2)
          switch_state: seeking_microtuble
  seeking_microtuble:
  - move_to:
      selector: "#microtubules_x5F_grouped path"
      which: random
      finally:
        switch_state: following_microtuble_outwards
  following_microtuble_outwards:
  - if:
      fact: world.working_myosin_5a
    then:
      follow:
        selector: "#microtubules_x5F_grouped path"
        which: nearest
        direction: forward
        until: [0.2, 0.9]
        finally:
          switch_state: find_actin_terminal
    else:
      follow:
        selector: "#microtubules_x5F_grouped path"
        which: nearest
        direction: forward
        finally:
          switch_state: waiting_at_edge_of_cell
  waiting_at_edge_of_cell:
  - wait:
      for: [0, 200]
      finally:
        switch_state: following_microtuble_inwards
  following_microtuble_inwards:
  - follow:
      selector: "#microtubules_x5F_grouped path"
      which: nearest
      at: 1
      direction: backward
      finally:
        switch_state: find_nuclear_actin_terminal
  find_actin_terminal:
  - move_to:
      selector: "#actin_terminals circle"
      which:
        any_of_nearest: 6
      random_offset: 10
      finally:
        switch_state: waiting_on_actin_terminal
  find_nuclear_actin_terminal:
  - move_to:
      selector: "#nuclear_actin_terminals circle"
      which:
        any_of_nearest: 5
      random_offset: 3
      finally:
        switch_state: waiting_on_nuclear_actin_terminal
  waiting_on_actin_terminal:
  - wait:
      for: 6000
      finally:
        switch_state: dying
  waiting_on_nuclear_actin_terminal:
  - wait:
      for: 6000
      finally:
        switch_state: dying
  dying:
  - grow:
      by: -0.02
      until: 0
      finally:
        die: true
  always:
  - if:
      all:
      - fact: world.working_myosin_5a
      - state: waiting_on_nuclear_actin_terminal
    then:
      wait:
        for: [100, 700]
        finally:
          switch_state: dying
  - if:
      all:
      - fact:
          not: world.working_myosin_5a
      - state: waiting_on_actin_terminal
    then:
      wait:
        for: [100, 700]
        finally:
          switch_state: dying
